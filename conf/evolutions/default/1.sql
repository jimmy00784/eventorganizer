# --- !Ups
create table `LOCATIONS` (`id` INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,`name` VARCHAR(25) NOT NULL);
create table `EVENTTYPES` (`id` INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,`name` VARCHAR(25) NOT NULL);
create table `EVENTS` (`id` INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,`eventTypeId` INTEGER NOT NULL,`date` DATE NOT NULL,`locationId` INTEGER NOT NULL,`name` VARCHAR(50) NOT NULL,`state` INTEGER DEFAULT 0 NOT NULL);
create unique index `idx` on `EVENTS` (`eventTypeId`,`date`,`locationId`);
create table `AGENDATYPES` (`id` INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,`name` VARCHAR(25) NOT NULL,`parent` INTEGER);
create table `EVENTTYPEAGENDA` (`id` INTEGER NOT NULL,`eventTypeId` INTEGER NOT NULL,`agendaTypeId` INTEGER NOT NULL);
alter table `EVENTTYPEAGENDA` add constraint `pk_agendaItem` primary key(`id`,`eventTypeId`,`agendaTypeId`);
create table `CONTACTS` (`id` INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,`givenName` VARCHAR(50) NOT NULL,`lastName` VARCHAR(50) NOT NULL,`groupId` VARCHAR(50),`sex` VARCHAR(1),`category` VARCHAR(1),`notes` TEXT);
create table `CONTACTPREFERENCES` (`contactId` INTEGER NOT NULL,`agendaTypeId` INTEGER NOT NULL,`prefer` BOOLEAN NOT NULL);
alter table `CONTACTPREFERENCES` add constraint `pk_contactPreferences` primary key(`contactId`,`agendaTypeId`);
create table `EVENTAGENDAITEMS` (`id` INTEGER NOT NULL,`eventId` INTEGER NOT NULL,`agendaTypeId` INTEGER NOT NULL,`prenotes` TEXT NOT NULL);
alter table `EVENTAGENDAITEMS` add constraint `pk_eventAgendaItems` primary key(`id`,`eventId`);
create table `EVENTAGENDAITEMCONTACTS` (`id` INTEGER NOT NULL,`eventId` INTEGER NOT NULL,`contactId` INTEGER NOT NULL,`postnotes` TEXT NOT NULL);
alter table `EVENTAGENDAITEMCONTACTS` add constraint `pk_eventAgendaItemContact` primary key(`id`,`eventId`,`contactId`);
create table `USERS` (`id` INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,`email` VARCHAR(50) NOT NULL,`givenName` VARCHAR(25) NOT NULL,`lastName` VARCHAR(25) NOT NULL,`password` VARCHAR(64),`failedAttempts` INTEGER DEFAULT 0 NOT NULL,`lastLogin` DATE NOT NULL,`lastAttempt` DATE NOT NULL,`active` BOOLEAN NOT NULL,`resetKey` VARCHAR(50),`isAdmin` BOOLEAN DEFAULT false NOT NULL);
create unique index `emailIdx` on `USERS` (`email`);
alter table `EVENTS` add constraint `event_fk_eventTypeId` foreign key(`eventTypeId`) references `EVENTTYPES`(`id`) on update CASCADE on delete RESTRICT;
alter table `EVENTS` add constraint `event_fk_locationId` foreign key(`locationId`) references `LOCATIONS`(`id`) on update CASCADE on delete RESTRICT;
alter table `AGENDATYPES` add constraint `fk_agendaTypeParent` foreign key(`parent`) references `AGENDATYPES`(`id`) on update CASCADE on delete RESTRICT;
alter table `EVENTTYPEAGENDA` add constraint `fk_agendaTypes` foreign key(`agendaTypeId`) references `AGENDATYPES`(`id`) on update CASCADE on delete RESTRICT;
alter table `EVENTTYPEAGENDA` add constraint `fk_eventTypes` foreign key(`eventTypeId`) references `EVENTTYPES`(`id`) on update CASCADE on delete RESTRICT;
alter table `CONTACTPREFERENCES` add constraint `fk_cpAgendaTypes` foreign key(`agendaTypeId`) references `AGENDATYPES`(`id`) on update CASCADE on delete RESTRICT;
alter table `CONTACTPREFERENCES` add constraint `fk_cpContacts` foreign key(`contactId`) references `CONTACTS`(`id`) on update CASCADE on delete RESTRICT;
alter table `EVENTAGENDAITEMS` add constraint `fk_agendaTypes` foreign key(`agendaTypeId`) references `AGENDATYPES`(`id`) on update CASCADE on delete RESTRICT;
alter table `EVENTAGENDAITEMS` add constraint `fk_events` foreign key(`eventId`) references `EVENTS`(`id`) on update CASCADE on delete RESTRICT;
alter table `EVENTAGENDAITEMCONTACTS` add constraint `fk_eaiContacts` foreign key(`contactId`) references `CONTACTS`(`id`) on update CASCADE on delete RESTRICT;
alter table `EVENTAGENDAITEMCONTACTS` add constraint `fk_eventAgendaItems` foreign key(`id`,`eventId`) references `EVENTAGENDAITEMS`(`id`,`eventId`) on update CASCADE on delete RESTRICT;

# --- !Downs
ALTER TABLE EVENTAGENDAITEMCONTACTS DROP FOREIGN KEY fk_eaiContacts;
ALTER TABLE EVENTAGENDAITEMCONTACTS DROP FOREIGN KEY fk_eventAgendaItems;
ALTER TABLE EVENTAGENDAITEMS DROP FOREIGN KEY fk_agendaTypes;
ALTER TABLE EVENTAGENDAITEMS DROP FOREIGN KEY fk_events;
ALTER TABLE CONTACTPREFERENCES DROP FOREIGN KEY fk_cpAgendaTypes;
ALTER TABLE CONTACTPREFERENCES DROP FOREIGN KEY fk_cpContacts;
ALTER TABLE EVENTTYPEAGENDA DROP FOREIGN KEY fk_agendaTypes;
ALTER TABLE EVENTTYPEAGENDA DROP FOREIGN KEY fk_eventTypes;
ALTER TABLE AGENDATYPES DROP FOREIGN KEY fk_agendaTypeParent;
ALTER TABLE EVENTS DROP FOREIGN KEY event_fk_eventTypeId;
ALTER TABLE EVENTS DROP FOREIGN KEY event_fk_locationId;
drop table `USERS`;
ALTER TABLE EVENTAGENDAITEMCONTACTS DROP PRIMARY KEY;
drop table `EVENTAGENDAITEMCONTACTS`;
ALTER TABLE EVENTAGENDAITEMS DROP PRIMARY KEY;
drop table `EVENTAGENDAITEMS`;
ALTER TABLE CONTACTPREFERENCES DROP PRIMARY KEY;
drop table `CONTACTPREFERENCES`;
drop table `CONTACTS`;
ALTER TABLE EVENTTYPEAGENDA DROP PRIMARY KEY;
drop table `EVENTTYPEAGENDA`;
drop table `AGENDATYPES`;
drop table `EVENTS`;
drop table `EVENTTYPES`;
drop table `LOCATIONS`;